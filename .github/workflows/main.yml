name: build

on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Setup Python
        uses: actions/setup-python@master
        with:
          python-version: 3.x
      - name: Lint with flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  build:
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]
    runs-on: ${{ matrix.os }}
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Test with tox
        shell: bash
        run: |
          # remove the "." in the python version
          tox -e "py${PYTHON_VERSION//.}"
      - name: Upload to codecov
        uses: codecov/codecov-action@v1

  anaconda:
    needs: [lint]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        # TODO: replace with official github actions in the future
      - name: Set up Anaconda Python
        uses: goanpeca/setup-miniconda@v1
        with:
          activate-environment: statdp
          python-version: 3.8
          auto-update-conda: true
      - name: List anaconda info
        shell: bash -l {0}
        run: |
          conda info
          conda env list
      - name: Install StatDP
        shell: bash -l {0}
        run: |
          conda install --yes numpy numba matplotlib sympy tqdm coloredlogs pip codecov
          conda install -c intel icc_rt
          pip install .[test]
      - name: Test with pytest
        shell: bash -l {0}
        run: |
          pytest tests/ --durations=0 --cov=./ --cov-report xml --cov-report term
      - name: Upload to codecov
        uses: codecov/codecov-action@v1

  deploy_docker:
    needs: [build, anaconda]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - uses: actions/checkout@master
      - name: Docker build
        run: docker build . -t cmlapsu/statdp
      - name: Test docker build
        run: docker run cmlapsu/statdp python -c "import statdp"
      - name: Upload to Docker Hub
        if: success()
        run: | 
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin
          docker push cmlapsu/statdp:latest
  
  deploy_github:
    needs: [build, deploy_docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    env:
      CMLAPSU_DEPLOY_TOKEN: ${{ secrets.CMLAPSU_DEPLOY_TOKEN }}
    steps:
      - uses: actions/checkout@master
      - name: Upload to cmla-psu github repository
        run: |
          # remove github workflow configurations
          rm -rf .github
          rm -rf .git
          git init
          git config user.name "Yuxin Wang"
          git config user.email "yuxinwang.dev@gmail.com"
          git add .
          git commit -m "Release of StatDP."
          git remote add origin https://yxwangcs:$CMLAPSU_DEPLOY_TOKEN@github.com/cmla-psu/statdp.git
          git push -u --force origin master
